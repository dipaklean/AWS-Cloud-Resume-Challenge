AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  crc-sam

  Sample SAM Template for cloud resume challenge

Globals:
  Function:
    Timeout: 3

Resources:
  MyWebsite:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: dl-cloudresume
      WebsiteConfiguration:
        IndexDocument: index.html

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontOAI}"
            Action: "s3:GetObject"
            Resource: !Join
              - ""
              - - "arn:aws:s3:::"
                - !Ref MyWebsite
                - /*
      Bucket: !Ref MyWebsite
  
  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: 'OAI for S3'

  DynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: crc-table
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"

  MyDistribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: dl-cloudresume.s3.ap-southeast-2.amazonaws.com
          DefaultTTL: 3600
          MinTTL: 1
          MaxTTL: 86400
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: dl-cloudresume.s3.ap-southeast-2.amazonaws.com
            Id: dl-cloudresume.s3.ap-southeast-2.amazonaws.com
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${CloudFrontOAI}'
        Aliases:
          - resume.dleantech.com
        Enabled: true
        DefaultRootObject: index.html
        ViewerCertificate:
            AcmCertificateArn: arn:aws:acm:us-east-1:<<ACCOUNT_NR>>:certificate/<<CERT_NR>>
            SslSupportMethod: sni-only

  MyRoute53Record:
    Type: AWS::Route53::RecordSetGroup
    Properties: 
      HostedZoneId: Z08405492NKVC6I15ZS03
      RecordSets:
        - Name: resume.dleantech.com
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt MyDistribution.DomainName

  GetCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      Policies:
        - DynamoDBCrudPolicy:
            TableName: crc-table
      CodeUri: get-function/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api 
          Properties:
            Path: /get
            Method: get

  PutCountFunction:
    Type: AWS::Serverless::Function 
    Properties:
      Policies:
        - DynamoDBCrudPolicy:
            TableName: crc-table
      CodeUri: put-function/
      Handler: app.lambda_handler
      Runtime: python3.9
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            Path: /put
            Method: get